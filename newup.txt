CREATE DATABASE IF NOT EXISTS hotel CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE hotel_management;

-- Enum type definitions
-- Note: ENUMs are created inline in MySQL, not separately.

-- hotel_owners table
CREATE TABLE hotel_owners (
    owner_id INT PRIMARY KEY AUTO_INCREMENT,
    owner_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    subscription_status ENUM('trial', 'active', 'expired') NOT NULL DEFAULT 'trial'
);

-- users table
CREATE TABLE users (
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    owner_id INT NOT NULL,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (owner_id) REFERENCES hotel_owners(owner_id) ON DELETE CASCADE
);

-- owner_profile table
CREATE TABLE owner_profile (
    profile_id INT PRIMARY KEY AUTO_INCREMENT,
    owner_id INT NOT NULL,
    hotel_name VARCHAR(100) UNIQUE,
    number_of_tables INT NOT NULL DEFAULT 1,
    hotel_photo VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    timezone VARCHAR(50) DEFAULT 'UTC',
    FOREIGN KEY (owner_id) REFERENCES hotel_owners(owner_id)
);

-- waiters table
CREATE TABLE waiters (
    waiter_id INT PRIMARY KEY AUTO_INCREMENT,
    waiter_name VARCHAR(50) NOT NULL,
    password VARCHAR(255) NOT NULL,
    owner_id INT NOT NULL,
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (owner_id) REFERENCES hotel_owners(owner_id)
);

-- items table
CREATE TABLE items (
    item_id INT PRIMARY KEY AUTO_INCREMENT,
    owner_id INT NOT NULL,
    item_name VARCHAR(50) NOT NULL UNIQUE,
    price INT NOT NULL,
    category VARCHAR(50) NOT NULL,
    FOREIGN KEY (owner_id) REFERENCES hotel_owners(owner_id) ON DELETE CASCADE
);

-- table_sessions table
CREATE TABLE table_sessions (
    id INT PRIMARY KEY AUTO_INCREMENT,
    table_id INT NOT NULL,
    owner_id INT NOT NULL,
    waiter_id INT NOT NULL,
    status ENUM('free', 'occupied') NOT NULL DEFAULT 'occupied',
    data TEXT DEFAULT '[]',
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    total INT,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (owner_id) REFERENCES hotel_owners(owner_id),
    FOREIGN KEY (waiter_id) REFERENCES waiters(waiter_id)
);

-- bills table
CREATE TABLE bills (
    bill_id INT PRIMARY KEY AUTO_INCREMENT,
    table_id INT NOT NULL,
    owner_id INT NOT NULL,
    waiter_id INT NOT NULL,
    total_amount FLOAT NOT NULL,
    bill_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    details JSON,
    FOREIGN KEY (owner_id) REFERENCES hotel_owners(owner_id),
    FOREIGN KEY (waiter_id) REFERENCES waiters(waiter_id)
);

-- contacts table
CREATE TABLE contacts (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    message TEXT NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- subscriptions table
CREATE TABLE subscriptions (
    subscription_id INT PRIMARY KEY AUTO_INCREMENT,
    owner_id INT NOT NULL,
    owner_name VARCHAR(255) NOT NULL,
    owner_email VARCHAR(255) NOT NULL UNIQUE,
    status ENUM('trial', 'active', 'expired') NOT NULL DEFAULT 'trial',
    start_date DATETIME,
    end_date DATETIME,
    FOREIGN KEY (owner_id) REFERENCES hotel_owners(owner_id) ON DELETE CASCADE
);

-- events table
CREATE TABLE events (
    id INT PRIMARY KEY AUTO_INCREMENT,
    event_id VARCHAR(255) NOT NULL UNIQUE,
    event_type VARCHAR(255) NOT NULL,
    event_data JSON NOT NULL
);
